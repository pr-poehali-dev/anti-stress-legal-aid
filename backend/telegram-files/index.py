import json
import os
import requests
from typing import Dict, Any
from datetime import datetime
import time
import base64

def handler(event: Dict[str, Any], context: Any) -> Dict[str, Any]:
    '''
    Business: –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞—è–≤–∫–∏ –Ω–∞ –∞–Ω–∞–ª–∏–∑ –ø—Ä–µ—Ç–µ–Ω–∑–∏–π –≤ Telegram —Å —Ñ–∞–π–ª–∞–º–∏
    Args: event - dict —Å httpMethod, body, headers
          context - object —Å request_id –∏ –¥—Ä—É–≥–∏–º–∏ –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏  
    Returns: HTTP response dict
    '''
    method: str = event.get('httpMethod', 'POST')
    
    # Handle CORS OPTIONS request
    if method == 'OPTIONS':
        return {
            'statusCode': 200,
            'headers': {
                'Access-Control-Allow-Origin': '*',
                'Access-Control-Allow-Methods': 'POST, OPTIONS',
                'Access-Control-Allow-Headers': 'Content-Type, Authorization',
                'Access-Control-Max-Age': '86400'
            },
            'body': ''
        }
    
    if method != 'POST':
        return {
            'statusCode': 405,
            'headers': {
                'Content-Type': 'application/json', 
                'Access-Control-Allow-Origin': '*'
            },
            'isBase64Encoded': False,
            'body': json.dumps({'error': '–ú–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è'})
        }
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram
    bot_token = os.environ.get('TELEGRAM_BOT_TOKEN_NEW') or os.environ.get('TELEGRAM_BOT_TOKEN')
    chat_id = os.environ.get('TELEGRAM_CHAT_ID_NEW') or os.environ.get('TELEGRAM_CHAT_ID')
    
    if not bot_token or not chat_id:
        return {
            'statusCode': 500,
            'headers': {
                'Content-Type': 'application/json', 
                'Access-Control-Allow-Origin': '*'
            },
            'isBase64Encoded': False,
            'body': json.dumps({'error': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –Ω–µ –Ω–∞–π–¥–µ–Ω—ã'})
        }

    # –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ –∏–∑ body
    try:
        body_data = json.loads(event.get('body', '{}'))
    except json.JSONDecodeError:
        return {
            'statusCode': 400,
            'headers': {
                'Content-Type': 'application/json', 
                'Access-Control-Allow-Origin': '*'
            },
            'isBase64Encoded': False,
            'body': json.dumps({'error': '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö'})
        }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
    name = body_data.get('name', '').strip()
    contact = body_data.get('contact', '').strip()
    description = body_data.get('description', '').strip()
    file_data = body_data.get('file')
    
    if not all([name, contact]):
        return {
            'statusCode': 400,
            'headers': {
                'Content-Type': 'application/json', 
                'Access-Control-Allow-Origin': '*'
            },
            'isBase64Encoded': False,
            'body': json.dumps({'error': '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è'})
        }
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    telegram_message = f"""üìã –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∞–Ω–∞–ª–∏–∑ –ø—Ä–µ—Ç–µ–Ω–∑–∏–∏!

üë§ –ö–ª–∏–µ–Ω—Ç: {name}
üìû –ö–æ–Ω—Ç–∞–∫—Ç: {contact}

üìù –û–ø–∏—Å–∞–Ω–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏:
{description if description else '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}

üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: 5000 ‚ÇΩ
‚è∞ –í—Ä–µ–º—è: {body_data.get('timestamp', datetime.now().strftime('%Y-%m-%d %H:%M:%S'))}

{f'üìé –§–∞–π–ª: {file_data.get("name", "–ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω")}' if file_data else 'üìé –§–∞–π–ª: –ù–µ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω'}"""

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    telegram_success = False
    max_retries = 3
    
    for attempt in range(max_retries):
        try:
            telegram_url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
            
            response = requests.post(
                telegram_url,
                data={
                    'chat_id': chat_id,
                    'text': telegram_message
                },
                timeout=15
            )
            
            if response.status_code == 200:
                telegram_response = response.json()
                if telegram_response.get('ok'):
                    telegram_success = True
                    break
                else:
                    error_msg = telegram_response.get('description', 'Unknown error')
                    if 'chat not found' in error_msg.lower() or 'bot was blocked' in error_msg.lower():
                        break
                        
        except Exception as e:
            print(f"Telegram attempt {attempt + 1} failed: {str(e)}")
            
        if attempt < max_retries - 1:
            time.sleep(1)
    
    # –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–∞–π–ª –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –æ—Ç–¥–µ–ª—å–Ω–æ
    file_sent = False
    if telegram_success and file_data and 'data' in file_data:
        try:
            # –î–µ–∫–æ–¥–∏—Ä—É–µ–º base64 —Ñ–∞–π–ª
            file_content = base64.b64decode(file_data['data'])
            file_name = file_data.get('name', 'document.pdf')
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –≤ Telegram
            file_url = f"https://api.telegram.org/bot{bot_token}/sendDocument"
            
            files = {
                'document': (file_name, file_content, file_data.get('type', 'application/octet-stream'))
            }
            
            data = {
                'chat_id': chat_id
            }
            
            response = requests.post(
                file_url,
                files=files,
                data=data,
                timeout=30
            )
            
            if response.status_code == 200:
                file_response = response.json()
                if file_response.get('ok'):
                    file_sent = True
                    
        except Exception as e:
            print(f"File sending failed: {str(e)}")
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ —Ñ–∞–π–ª –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å
            try:
                error_msg = f"‚ö†Ô∏è –§–∞–π–ª '{file_data.get('name', '–¥–æ–∫—É–º–µ–Ω—Ç')}' –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å. –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –∫–ª–∏–µ–Ω—Ç–∞ –ø—Ä–∏—Å–ª–∞—Ç—å –µ–≥–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ."
                requests.post(
                    f"https://api.telegram.org/bot{bot_token}/sendMessage",
                    data={
                        'chat_id': chat_id,
                        'text': error_msg
                    },
                    timeout=10
                )
            except:
                pass

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if telegram_success:
        message = '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!'
        if file_data and file_sent:
            message += ' –§–∞–π–ª —Ç–∞–∫–∂–µ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω.'
        elif file_data and not file_sent:
            message += ' –§–∞–π–ª –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω –æ—Ç–¥–µ–ª—å–Ω–æ.'
            
        return {
            'statusCode': 200,
            'headers': {
                'Content-Type': 'application/json', 
                'Access-Control-Allow-Origin': '*'
            },
            'isBase64Encoded': False,
            'body': json.dumps({
                'success': True,
                'message': message,
                'file_sent': file_sent
            })
        }
    else:
        return {
            'statusCode': 500,
            'headers': {
                'Content-Type': 'application/json', 
                'Access-Control-Allow-Origin': '*'
            },
            'isBase64Encoded': False,
            'body': json.dumps({'error': '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏'})
        }